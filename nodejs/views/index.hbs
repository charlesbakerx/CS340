<!DOCTYPE html>
<html>
<head>
    <title>Household Inventory</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="/css/style.css">
</head>
<body>
<nav>
    <a href="/">Items In Household</a> | 
    <a href="item_types">Item Types</a>
    <a href="shopping_lists">Shopping Lists</a>
    <a href="items_needed">Manage Items Needed</a>
    <a href="recipes">Manage Recipes</a>
    <a href="ingredients">Manage Ingredients</a>
</nav>

<!-- Table to display items -->
<table id="ItemsInHouse-table">
    <thead>
        <tr>
            {{#each data.[0]}}
            <th>{{@key}}</th>
            {{/each}}
            <th>Edit</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        {{#each data}}
        <tr data-value={{this.Item_ID}}>
            <td>{{this.Item_ID}}</td>
            <td>{{this.Type_ID}}</td>
            <td>{{this.Name}}</td>
            <td>{{this.Quantity}}</td>
            <td>{{this.Unit}}</td>
            <td>{{this.Expiry_Date}}</td>
            <td><button onclick="editItem({{this.Item_ID}})">Edit</button></td>
            <td><button onclick="deleteItem({{this.Item_ID}})">Delete</button></td>
        </tr>
        {{/each}}
    </tbody>
</table>

<h2>Add a New Item</h2>
<form id="add-item-form" method="POST" action="/add-item-form">
    <label for="input-Type_ID">Type ID: </label>
    <select name="input-Type_ID" id="input-Type_ID">
        <option value="">Select an Item Type</option>
        {{#each type}}
        <option value="{{this.Type_ID}}">{{this.Name}}</option>
        {{/each}}
    </select>

    <label for="input-Name">Name: </label>
    <input type="text" name="input-Name" id="input-Name">

    <label for="input-Quantity">Quantity of Item: </label>
    <input type="number" name="input-Quantity" id="input-Quantity">

    <label for="input-Unit">Unit to measure the item: </label>
    <input type="text" name="input-Unit" id="input-Unit">

    <label for="input-Expiry_Date">Date Item Expires if it is perishable: </label>
    <input type="date" name="input-Expiry_Date" id="input-Expiry_Date">

    <input type="submit" value="Submit">
</form>

<h2>Search for an Item</h2>
<form id="search-item-html" method="GET" action="/">
    <label for="input-Name">Search by Item Name: </label>
    <input type="text" name="Name" id="input-Name-html-search">
    <input type="submit" value="Search">
    <a href="/"><button type="button">Reset</button></a>
</form>

<h2>Update an Item</h2>
<form id="update-item-form-ajax">
    <label for="input-Name">Item name: </label>
    <select name="input-Name" id="mySelect">
        <option value="">Select an Item</option>
        {{#each data}}
        <option value="{{this.Item_ID}}">{{this.Name}}</option>
        {{/each}}
    </select>

    <label for="input-Type">Item Type: </label>
    <select name="input-Type" id="input-Type-update">
        <option value="">Select a Type</option>
        {{#each Item_Types}}
        <option value="{{this.Type_ID}}">{{this.Name}}</option>
        {{/each}}
    </select>

    <label for="input-Quantity">Quantity of Item: </label>
    <input type="number" name="input-Quantity" id="input-Quantity">

    <label for="input-Unit">Unit to measure the item: </label>
    <input type="text" name="input-Unit" id="input-Unit">

    <label for="input-Expiry_Date">Date Item Expires if it is perishable: </label>
    <input type="date" name="input-Expiry_Date" id="input-Expiry_Date">

    <input type="submit" value="Update">
</form>

<script src="./js/delete_item.js"></script>
<script src="./js/update_item.js"></script>

<script>
    // Delete item function
    function deleteItem(itemID) {
        fetch(`/delete-item/${itemID}`, {
            method: 'DELETE'
        }).then(response => {
            if (response.ok) {
                document.querySelector(`tr[data-value="${itemID}"]`).remove();
            } else {
                console.error('Failed to delete item.');
            }
        });
    }

    // Populate Type dropdowns for Add and Update forms
    document.addEventListener('DOMContentLoaded', function() {
        fetch('/types')
            .then(response => response.json())
            .then(types => {
                const typeSelects = document.querySelectorAll('#input-Type_ID, #input-Type-update');
                typeSelects.forEach(select => {
                    types.forEach(type => {
                        const option = document.createElement('option');
                        option.value = type.Type_ID;
                        option.textContent = type.Name;
                        select.appendChild(option);
                    });
                });
            });
    });
</script>

</body>
</html>
